#!/bin/bash

# ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗
# ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝
# ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗  
# ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝  
# ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗
# ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝
#
# Author: wilberquito
# License: WTFPL
# Description:
# 	- Link config files to system
# Requirements:
# 	- ...


DOTFILES_ROOT=$(pwd -P)
cd "$(dirname "$0")/.."
echo "$(pwd)"

echo $DOTFILES_ROOT


info () {
	printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
	printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
	printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
	printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
	echo ''
	exit
}

setup_gitconfig () {
	# Checks if the gitconfig symlink file exists,
	# if it does not, it creates one using a skeleton example

	if ! [ -f symlink/home/gitconfig.symlink ]
	then
		info 'setup gitconfig'

		if ! [ -f example/gitconfig.symlink.example ]
		then
			fail 'gitconfig skeleton not found'
		fi

		user ' - What is your github author name?'
		read -e git_authorname
		user ' - What is your github author email?'
		read -e git_authoremail

		sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" example/gitconfig.symlink.example > symlink/home/gitconfig.symlink

		success 'gitconfig'
	fi
}

setup_gitconfig

